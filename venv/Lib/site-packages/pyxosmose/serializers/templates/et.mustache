local osmose = require 'osmose'
local et = osmose.Model '{{et_name}}'

{{#layers}}
et:addLayers { {{name}} = {type= 'ResourceBalance', unit = '{{unit}}'} }
{{/layers}}

{{#units}}
et:addUnit("{{unitname}}", {type = '{{type}}', Cost1 = '{{unitname}}_cost1', Cost2 = '{{unitname}}_cost2', Cinv1 = '{{unitname}}_cinv1', Cinv2 = '{{unitname}}_cinv2', Impact1 = '{{unitname}}_imp1', Impact2 = '{{unitname}}_imp2', Fmin = '{{unitname}}_fmin', Fmax = '{{unitname}}_fmax'})

et["{{unitname}}"]:addStreams({
  {{#streams}}
  {{#is_heat}}
  {{name}} = qt{tin = '{{unitname}}_{{name}}_Tin', hin = '{{unitname}}_{{name}}_Hin', tout = '{{unitname}}_{{name}}_Tout', hout = '{{unitname}}_{{name}}_Hout', dtmin = '{{unitname}}_{{name}}_dTmin', alpha = '{{unitname}}_{{name}}_alpha'},
  {{/is_heat}}
  {{^is_heat}}
  {{name}} = rs{'{{name}}', '{{direction}}', '{{unitname}}_{{name}}_Flow'},
  {{/is_heat}}
  {{/streams}}
})
{{/units}}

{{#capex}}
et:addParameterData {capex_weight_factor = {value = 'capex'} }
{{/capex}}
{{#co2_tax}}
et:addParameterData {impact_weight_factor = {value = 'CO2_value'} }
{{/co2_tax}}

et.inputs = {
{{#capex}}
capex = {default = {{capex}}, unit = '-', description = 'effect of capex on opex'},
{{/capex}}
{{#co2_tax}}
CO2_value = {default = {{co2_tax}}, unit = '-', description = 'CO2 tax in CHF/kg'},
{{/co2_tax}}
{{#inputs}}
{{unitname}}_cost1 = {default = {{cost1}} },
{{unitname}}_cost2 = {default = {{cost2}} },
{{unitname}}_cinv1 = {default = {{cinv1}} },
{{unitname}}_cinv2 = {default = {{cinv2}} },
{{unitname}}_imp1 = {default = {{imp1}} },
{{unitname}}_imp2 = {default = {{imp2}} },
{{unitname}}_fmin = {default = {{fmin}} },
{{unitname}}_fmax = {default = {{fmax}} },
{{#streams}}
{{#is_heat}}
{{unitname}}_{{name}}_Tin = {default = {{tin}} },
{{unitname}}_{{name}}_Tout = {default = {{tout}} },
{{unitname}}_{{name}}_Hin = {default = {{hin}} },
{{unitname}}_{{name}}_Hout = {default = {{hout}} },
{{unitname}}_{{name}}_dTmin = {default = {{dtmin}} },
{{unitname}}_{{name}}_alpha = {default = {{alpha}} },
{{/is_heat}}
{{^is_heat}}
{{unitname}}_{{name}}_Flow = {default = {{flow}} },
{{/is_heat}}
{{/streams}}
{{/inputs}}
}
et.outputs = {
}

return et
