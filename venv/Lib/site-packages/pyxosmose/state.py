from CoolProp.CoolProp import PropsSI

class State():

    def __init__(self, pair,fluid='Water',temperature=-1.0,pressure=-1.0,density=-1.0, cpmass=-1.0,cvmass=-1.0, enthalpy=-1.0,entropy=-1.0, vapfrac=-1.0):
        ########### Define the relevant properties
        self.pair = pair
        self.fluid = fluid
        self.temperature = temperature
        self.pressure = pressure
        self.density = density
        self.cpmass = cpmass
        self.cvmass = cvmass
        self.enthalpy = enthalpy
        self.entropy = entropy
        self.vapfrac = vapfrac
        #self.Other = Others

    def StateCalc(self):
        if self.pair == 'TP': # Calculate only for TP
            try:
                if PropsSI('Q', 'T', self.temperature, 'P', self.pressure, self.fluid) < 0:
                    self.vapfrac = PropsSI('Q', 'T', self.temperature, 'P', self.pressure, self.fluid)
                    self.enthalpy = PropsSI('H', 'T', self.temperature, 'P', self.pressure, self.fluid)
                    self.entropy = PropsSI('S', 'T', self.temperature, 'P', self.pressure, self.fluid)
                    self.density = PropsSI('D', 'T', self.temperature, 'P', self.pressure, self.fluid)
                    self.cpmass = PropsSI('Cpmass','T', self.temperature, 'P', self.pressure, self.fluid)
                    self.cvmass = PropsSI('Cvmass', 'T', self.temperature, 'P', self.pressure, self.fluid)
                    ########## self.Others = PropsSI('Others', 'T', self.temperature, 'P', self.pressure, self.fluid)
                    ########## Other properties come here
            except ValueError:
                print('Saturation pressure and temperature are dependent. Select another pair (e.g. PQ, PH, etc.)')

        else: # Calculate for other pair than TP but without Q in pair
            if self.pair == 'TD':
                self.pressure = PropsSI('P','T',self.temperature,'D',self.density,self.fluid)
                self.enthalpy = PropsSI('H', 'T', self.temperature, 'D', self.density, self.fluid)
            elif self.pair == 'TH':
                self.pressure = PropsSI('P','T',self.temperature,'H',self.enthalpy,self.fluid)
                self.enthalpy = PropsSI('H', 'T', self.temperature, 'H', self.enthalpy, self.fluid)
            elif self.pair == 'TS':
                self.pressure = PropsSI('P','T',self.temperature,'S',self.entropy,self.fluid)
                self.enthalpy = PropsSI('H', 'T', self.temperature, 'S', self.entropy, self.fluid)
            elif self.pair == 'PD':
                self.temperature = PropsSI('T', 'P', self.pressure, 'D', self.density, self.fluid)
                self.enthalpy = PropsSI('H', 'P', self.pressure, 'D', self.density, self.fluid)
            elif self.pair == 'PH':
                self.temperature = PropsSI('T', 'P', self.pressure, 'H', self.enthalpy, self.fluid)
                self.enthalpy = PropsSI('H', 'P', self.pressure, 'H', self.enthalpy, self.fluid)
            elif self.pair == 'PS':
                self.temperature = PropsSI('T', 'P', self.pressure, 'S', self.entropy, self.fluid)
                self.enthalpy = PropsSI('H', 'P', self.pressure, 'S', self.entropy, self.fluid)
            elif self.pair == 'DH':
                self.pressure = PropsSI('P', 'D', self.density, 'H', self.enthalpy, self.fluid)
                self.temperature = PropsSI('T', 'D', self.density, 'H', self.enthalpy, self.fluid)
            elif self.pair == 'DS':
                self.pressure = PropsSI('P', 'D', self.density, 'S', self.entropy, self.fluid)
                self.temperature = PropsSI('T', 'D', self.density, 'S', self.entropy, self.fluid)
                self.enthalpy = PropsSI('H', 'P', self.pressure, 'S', self.entropy, self.fluid)
            elif self.pair == 'HS':
                self.pressure = PropsSI('P', 'H', self.enthalpy, 'S', self.entropy, self.fluid)
                self.temperature = PropsSI('T', 'H', self.enthalpy, 'S', self.entropy, self.fluid)

            elif self.pair == 'TQ':  # verify that Q is in the correct range.
                if self.vapfrac < 0:
                    print('The vapor fraction cannot be negative, verify input to TQ')
                elif self.vapfrac <=1:
                    self.pressure = PropsSI('P', 'T', self.temperature, 'Q', self.vapfrac, self.fluid)
                    self.enthalpy = PropsSI('H', 'T', self.temperature, 'Q', self.vapfrac, self.fluid)
                else:
                    print('The vapor fraction must be lower or equal than 1, verify input to TQ')

            elif self.pair == 'PQ':  # verify that Q is in the correct range.
                if self.vapfrac < 0:
                    print('The vapor fraction cannot be negative, verify input to PQ')
                elif self.vapfrac <=1:
                    self.temperature = PropsSI('T', 'P', self.pressure, 'Q', self.vapfrac, self.fluid)
                    self.enthalpy = PropsSI('H', 'P', self.pressure, 'Q', self.vapfrac, self.fluid)
                else:
                    print('The vapor fraction must be lower or equal than 1, verify input to PQ')

            elif self.pair == 'DQ':  # verify that Q is in the correct range.
                if self.vapfrac < 0:
                    print('The vapor fraction cannot be negative, verify input to DQ')
                elif self.vapfrac <=1:
                    self.pressure = PropsSI('P', 'D', self.density, 'Q', self.vapfrac, self.fluid)
                    self.temperature = PropsSI('T', 'D', self.density, 'Q', self.vapfrac, self.fluid)
                    self.enthalpy = PropsSI('H', 'D', self.density, 'Q', self.vapfrac, self.fluid)
                else:
                    print('The vapor fraction must be lower or equal than 1, verify input to DQ')

            elif self.pair == 'HQ': # verify that Q is in the correct range.
                if self.vapfrac < 0:
                    print('The vapor fraction cannot be negative, verify input to HQ')
                elif self.vapfrac <=1:
                    self.pressure = PropsSI('P', 'H', self.temperature, 'Q', self.vapfrac, self.fluid)
                    self.temperature = PropsSI('T', 'H', self.temperature, 'Q', self.vapfrac, self.fluid)
                else:
                    print('The vapor fraction must be lower or equal than 1, verify input to HQ')

            elif self.pair == 'SQ': # verify that Q is in the correct range.
                if self.vapfrac < 0:
                    print('The vapor fraction cannot be negative, verify input to SQ')
                elif self.vapfrac <=1:
                    self.pressure = PropsSI('P', 'S', self.entropy, 'Q', self.vapfrac, self.fluid)
                    self.temperature = PropsSI('T', 'S', self.entropy, 'Q', self.vapfrac, self.fluid)
                    self.enthalpy = PropsSI('H', 'S', self.entropy, 'Q', self.vapfrac, self.fluid)
                else:
                    print('The vapor fraction must be lower or equal than 1, verify input to SQ')

            self.entropy = PropsSI('S', 'P', self.pressure, 'H', self.enthalpy, self.fluid)
            self.density = PropsSI('D', 'P', self.pressure, 'H', self.enthalpy, self.fluid)
            self.vapfrac = PropsSI('Q', 'P', self.pressure, 'H', self.enthalpy, self.fluid)
            self.cpmass = PropsSI('Cpmass', 'T', self.temperature, 'P', self.pressure, self.fluid)
            self.cvmass = PropsSI('Cvmass', 'T', self.temperature, 'P', self.pressure, self.fluid)
