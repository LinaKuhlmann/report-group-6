def retrieve_table_content(code):
    lines = code.split("\n")
    table = []
    for line in lines:
        if line is not None and line.strip() != "":
            if not line.startswith("#"):
                line = line.strip()
                if line[0] == "|":
                    table.append(line)
    return table[2:]


def retrieve_code_content(code):
    lines = code.split("\n")
    code_lines = []
    for line in lines:
        if line is not None and line != "":
            if not line.startswith(":") and not line.startswith("!") and not line.startswith("#"):
                code_lines.append(line)
    return code_lines


def retrieve_data_from_meta_language(elements):
    var_name = elements[0].strip()
    unit = ""
    description = ""
    data = elements[1].strip()
    if "#" in data:
        data = data.split("#")
        description = data[1].strip()
        data = data[0]
    if "[" in data and "]" in data:
        unit = data[data.find("[") + 1:data.find("]")]
        data = data.split("[")
        data = data[0]
    return var_name, unit, description, data


def retrieve_ets_from_solve_args(elements):
    if len(elements) > 5:
        ets_code = ""
        for x in range(4, len(elements)):
            ets_code = ets_code + elements[x]
        ets_code = ets_code[1:-1]
    else:
        ets_code = elements[4][1:-1]
    ets_txt = ets_code.split(',')
    for id_et, et in enumerate(ets_txt):
        ets_txt[id_et] = et.strip()
    return ets_txt


def is_number(s):
    try:
        float(s)
        return True
    except ValueError:
        return False
